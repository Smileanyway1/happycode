{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\vnd\\\\New folder\\\\happycode\\\\src\\\\heart\\\\components\\\\heart2\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Point {\n  constructor(x, y) {\n    this.x = void 0;\n    this.y = void 0;\n    this.x = typeof x !== \"undefined\" ? x : 0;\n    this.y = typeof y !== \"undefined\" ? y : 0;\n  }\n  clone() {\n    return new Point(this.x, this.y);\n  }\n  length(length) {\n    if (typeof length === \"undefined\") {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    this.normalize();\n    this.x *= length;\n    this.y *= length;\n    return this;\n  }\n  normalize() {\n    const length = this.length();\n    this.x /= length;\n    this.y /= length;\n    return this;\n  }\n}\nclass Particle {\n  constructor() {\n    this.position = void 0;\n    this.velocity = void 0;\n    this.acceleration = void 0;\n    this.age = void 0;\n    this.position = new Point();\n    this.velocity = new Point();\n    this.acceleration = new Point();\n    this.age = 0;\n  }\n  initialize(x, y, dx, dy, settings) {\n    this.position.x = x;\n    this.position.y = y;\n    this.velocity.x = dx;\n    this.velocity.y = dy;\n    this.acceleration.x = dx * settings.particles.effect;\n    this.acceleration.y = dy * settings.particles.effect;\n    this.age = 0;\n  }\n  update(deltaTime) {\n    this.position.x += this.velocity.x * deltaTime;\n    this.position.y += this.velocity.y * deltaTime;\n    this.velocity.x += this.acceleration.x * deltaTime;\n    this.velocity.y += this.acceleration.y * deltaTime;\n    this.age += deltaTime;\n  }\n  draw(context, image, settings) {\n    function ease(t) {\n      return --t * t * t + 1;\n    }\n    const size = image.width * ease(this.age / settings.particles.duration);\n    context.globalAlpha = 1 - this.age / settings.particles.duration;\n    context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n  }\n}\nclass ParticlePool {\n  constructor(length, settings) {\n    this.particles = void 0;\n    this.firstActive = void 0;\n    this.firstFree = void 0;\n    this.duration = void 0;\n    this.particles = new Array(length);\n    for (let i = 0; i < this.particles.length; i++) {\n      this.particles[i] = new Particle();\n    }\n    this.firstActive = 0;\n    this.firstFree = 0;\n    this.duration = settings.particles.duration;\n  }\n  add(x, y, dx, dy, settings) {\n    this.particles[this.firstFree].initialize(x, y, dx, dy, settings);\n    this.firstFree++;\n    if (this.firstFree === this.particles.length) {\n      this.firstFree = 0;\n    }\n    if (this.firstActive === this.firstFree) {\n      this.firstActive++;\n    }\n    if (this.firstActive === this.particles.length) {\n      this.firstActive = 0;\n    }\n  }\n  update(deltaTime) {\n    let i;\n    if (this.firstActive < this.firstFree) {\n      for (i = this.firstActive; i < this.firstFree; i++) {\n        this.particles[i].update(deltaTime);\n      }\n    }\n    if (this.firstFree < this.firstActive) {\n      for (i = this.firstActive; i < this.particles.length; i++) {\n        this.particles[i].update(deltaTime);\n      }\n      for (i = 0; i < this.firstFree; i++) {\n        this.particles[i].update(deltaTime);\n      }\n    }\n    while (this.particles[this.firstActive].age >= this.duration && this.firstActive !== this.firstFree) {\n      this.firstActive++;\n      if (this.firstActive === this.particles.length) {\n        this.firstActive = 0;\n      }\n    }\n  }\n  draw(context, image, settings) {\n    let i;\n    if (this.firstActive < this.firstFree) {\n      for (i = this.firstActive; i < this.firstFree; i++) {\n        this.particles[i].draw(context, image, settings);\n      }\n    }\n    if (this.firstFree < this.firstActive) {\n      for (i = this.firstActive; i < this.particles.length; i++) {\n        this.particles[i].draw(context, image, settings);\n      }\n      for (i = 0; i < this.firstFree; i++) {\n        this.particles[i].draw(context, image, settings);\n      }\n    }\n  }\n}\nconst HeartAnimation2 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    const settings = {\n      particles: {\n        length: 2000,\n        duration: 2,\n        velocity: 100,\n        effect: -1.3,\n        size: 13\n      }\n    };\n    const pointOnHeart = t => {\n      return new Point(160 * Math.pow(Math.sin(t), 3), 130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25);\n    };\n    const createImage = () => {\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      if (!context) throw new Error(\"Could not get context\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n      const to = t => {\n        const point = pointOnHeart(t);\n        point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n        point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n        return point;\n      };\n      context.beginPath();\n      let t = -Math.PI;\n      let point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01;\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n      context.fillStyle = \"#FF5CA4\";\n      context.fill();\n      const image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    };\n    const image = createImage();\n    const particles = new ParticlePool(settings.particles.length, settings);\n    let time;\n    const render = () => {\n      requestAnimationFrame(render);\n      const newTime = new Date().getTime() / 1000;\n      const deltaTime = newTime - (time || newTime);\n      time = newTime;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const amount = settings.particles.length / settings.particles.duration * deltaTime;\n      for (let i = 0; i < amount; i++) {\n        const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        const dir = pos.clone().length(settings.particles.velocity);\n        particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y, settings);\n      }\n      particles.update(deltaTime);\n      particles.draw(ctx, image, settings);\n    };\n    const onResize = () => {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    };\n    window.addEventListener(\"resize\", onResize);\n    setTimeout(() => {\n      onResize();\n      render();\n    }, 10);\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      id: \"pinkboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text\",\n      style: {\n        backgroundColor: \"rgb(0, 0, 0)\",\n        width: \"100%\",\n        color: \"rgb(225, 12, 168)\",\n        height: \"100%\",\n        fontSize: \"31px\",\n        fontStyle: \"italic\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        marginBottom: \"5px\",\n        textAlign: \"center\"\n      },\n      children: \"I Love You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(HeartAnimation2, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HeartAnimation2;\nexport default HeartAnimation2;\nvar _c;\n$RefreshReg$(_c, \"HeartAnimation2\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Point","constructor","x","y","clone","length","Math","sqrt","normalize","Particle","position","velocity","acceleration","age","initialize","dx","dy","settings","particles","effect","update","deltaTime","draw","context","image","ease","t","size","width","duration","globalAlpha","drawImage","ParticlePool","firstActive","firstFree","Array","i","add","HeartAnimation2","_s","canvasRef","current","canvas","ctx","getContext","pointOnHeart","pow","sin","cos","createImage","document","createElement","Error","height","to","point","beginPath","PI","moveTo","lineTo","closePath","fillStyle","fill","Image","src","toDataURL","time","render","requestAnimationFrame","newTime","Date","getTime","clearRect","amount","pos","random","dir","onResize","clientWidth","clientHeight","window","addEventListener","setTimeout","removeEventListener","className","children","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","color","fontSize","fontStyle","display","alignItems","justifyContent","marginBottom","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/acer/OneDrive/Máy tính/vnd/New folder/happycode/src/heart/components/heart2/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\ninterface Settings {\r\n  particles: {\r\n    length: number;\r\n    duration: number;\r\n    velocity: number;\r\n    effect: number;\r\n    size: number;\r\n  };\r\n}\r\n\r\nclass Point {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x?: number, y?: number) {\r\n    this.x = typeof x !== \"undefined\" ? x : 0;\r\n    this.y = typeof y !== \"undefined\" ? y : 0;\r\n  }\r\n\r\n  clone(): Point {\r\n    return new Point(this.x, this.y);\r\n  }\r\n\r\n  length(length?: number): number | Point {\r\n    if (typeof length === \"undefined\") {\r\n      return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n    this.normalize();\r\n    this.x *= length;\r\n    this.y *= length;\r\n    return this;\r\n  }\r\n\r\n  normalize(): Point {\r\n    const length = this.length() as number;\r\n    this.x /= length;\r\n    this.y /= length;\r\n    return this;\r\n  }\r\n}\r\n\r\nclass Particle {\r\n  position: Point;\r\n  velocity: Point;\r\n  acceleration: Point;\r\n  age: number;\r\n\r\n  constructor() {\r\n    this.position = new Point();\r\n    this.velocity = new Point();\r\n    this.acceleration = new Point();\r\n    this.age = 0;\r\n  }\r\n\r\n  initialize(\r\n    x: number,\r\n    y: number,\r\n    dx: number,\r\n    dy: number,\r\n    settings: Settings\r\n  ): void {\r\n    this.position.x = x;\r\n    this.position.y = y;\r\n    this.velocity.x = dx;\r\n    this.velocity.y = dy;\r\n    this.acceleration.x = dx * settings.particles.effect;\r\n    this.acceleration.y = dy * settings.particles.effect;\r\n    this.age = 0;\r\n  }\r\n\r\n  update(deltaTime: number): void {\r\n    this.position.x += this.velocity.x * deltaTime;\r\n    this.position.y += this.velocity.y * deltaTime;\r\n    this.velocity.x += this.acceleration.x * deltaTime;\r\n    this.velocity.y += this.acceleration.y * deltaTime;\r\n    this.age += deltaTime;\r\n  }\r\n\r\n  draw(\r\n    context: CanvasRenderingContext2D,\r\n    image: HTMLImageElement,\r\n    settings: Settings\r\n  ): void {\r\n    function ease(t: number): number {\r\n      return --t * t * t + 1;\r\n    }\r\n    const size = image.width * ease(this.age / settings.particles.duration);\r\n    context.globalAlpha = 1 - this.age / settings.particles.duration;\r\n    context.drawImage(\r\n      image,\r\n      this.position.x - size / 2,\r\n      this.position.y - size / 2,\r\n      size,\r\n      size\r\n    );\r\n  }\r\n}\r\n\r\nclass ParticlePool {\r\n  particles: Particle[];\r\n  firstActive: number;\r\n  firstFree: number;\r\n  duration: number;\r\n\r\n  constructor(length: number, settings: Settings) {\r\n    this.particles = new Array(length);\r\n    for (let i = 0; i < this.particles.length; i++) {\r\n      this.particles[i] = new Particle();\r\n    }\r\n    this.firstActive = 0;\r\n    this.firstFree = 0;\r\n    this.duration = settings.particles.duration;\r\n  }\r\n\r\n  add(x: number, y: number, dx: number, dy: number, settings: Settings): void {\r\n    this.particles[this.firstFree].initialize(x, y, dx, dy, settings);\r\n    this.firstFree++;\r\n    if (this.firstFree === this.particles.length) {\r\n      this.firstFree = 0;\r\n    }\r\n    if (this.firstActive === this.firstFree) {\r\n      this.firstActive++;\r\n    }\r\n    if (this.firstActive === this.particles.length) {\r\n      this.firstActive = 0;\r\n    }\r\n  }\r\n\r\n  update(deltaTime: number): void {\r\n    let i: number;\r\n\r\n    if (this.firstActive < this.firstFree) {\r\n      for (i = this.firstActive; i < this.firstFree; i++) {\r\n        this.particles[i].update(deltaTime);\r\n      }\r\n    }\r\n    if (this.firstFree < this.firstActive) {\r\n      for (i = this.firstActive; i < this.particles.length; i++) {\r\n        this.particles[i].update(deltaTime);\r\n      }\r\n      for (i = 0; i < this.firstFree; i++) {\r\n        this.particles[i].update(deltaTime);\r\n      }\r\n    }\r\n\r\n    while (\r\n      this.particles[this.firstActive].age >= this.duration &&\r\n      this.firstActive !== this.firstFree\r\n    ) {\r\n      this.firstActive++;\r\n      if (this.firstActive === this.particles.length) {\r\n        this.firstActive = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  draw(\r\n    context: CanvasRenderingContext2D,\r\n    image: HTMLImageElement,\r\n    settings: Settings\r\n  ): void {\r\n    let i: number;\r\n\r\n    if (this.firstActive < this.firstFree) {\r\n      for (i = this.firstActive; i < this.firstFree; i++) {\r\n        this.particles[i].draw(context, image, settings);\r\n      }\r\n    }\r\n    if (this.firstFree < this.firstActive) {\r\n      for (i = this.firstActive; i < this.particles.length; i++) {\r\n        this.particles[i].draw(context, image, settings);\r\n      }\r\n      for (i = 0; i < this.firstFree; i++) {\r\n        this.particles[i].draw(context, image, settings);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst HeartAnimation2: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) return;\r\n\r\n    const settings: Settings = {\r\n      particles: {\r\n        length: 2000,\r\n        duration: 2,\r\n        velocity: 100,\r\n        effect: -1.3,\r\n        size: 13,\r\n      },\r\n    };\r\n\r\n    const pointOnHeart = (t: number): Point => {\r\n      return new Point(\r\n        160 * Math.pow(Math.sin(t), 3),\r\n        130 * Math.cos(t) -\r\n          50 * Math.cos(2 * t) -\r\n          20 * Math.cos(3 * t) -\r\n          10 * Math.cos(4 * t) +\r\n          25\r\n      );\r\n    };\r\n\r\n    const createImage = (): HTMLImageElement => {\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      if (!context) throw new Error(\"Could not get context\");\r\n\r\n      canvas.width = settings.particles.size;\r\n      canvas.height = settings.particles.size;\r\n\r\n      const to = (t: number): Point => {\r\n        const point = pointOnHeart(t);\r\n        point.x =\r\n          settings.particles.size / 2 +\r\n          (point.x * settings.particles.size) / 350;\r\n        point.y =\r\n          settings.particles.size / 2 -\r\n          (point.y * settings.particles.size) / 350;\r\n        return point;\r\n      };\r\n\r\n      context.beginPath();\r\n      let t = -Math.PI;\r\n      let point = to(t);\r\n      context.moveTo(point.x, point.y);\r\n      while (t < Math.PI) {\r\n        t += 0.01;\r\n        point = to(t);\r\n        context.lineTo(point.x, point.y);\r\n      }\r\n      context.closePath();\r\n      context.fillStyle = \"#FF5CA4\";\r\n      context.fill();\r\n\r\n      const image = new Image();\r\n      image.src = canvas.toDataURL();\r\n      return image;\r\n    };\r\n\r\n    const image = createImage();\r\n    const particles = new ParticlePool(settings.particles.length, settings);\r\n    let time: number;\r\n\r\n    const render = () => {\r\n      requestAnimationFrame(render);\r\n\r\n      const newTime = new Date().getTime() / 1000;\r\n      const deltaTime = newTime - (time || newTime);\r\n      time = newTime;\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const amount =\r\n        (settings.particles.length / settings.particles.duration) * deltaTime;\r\n      for (let i = 0; i < amount; i++) {\r\n        const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\r\n        const dir = pos.clone().length(settings.particles.velocity) as Point;\r\n        particles.add(\r\n          canvas.width / 2 + pos.x,\r\n          canvas.height / 2 - pos.y,\r\n          dir.x,\r\n          -dir.y,\r\n          settings\r\n        );\r\n      }\r\n\r\n      particles.update(deltaTime);\r\n      particles.draw(ctx, image, settings);\r\n    };\r\n\r\n    const onResize = () => {\r\n      canvas.width = canvas.clientWidth;\r\n      canvas.height = canvas.clientHeight;\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n    setTimeout(() => {\r\n      onResize();\r\n      render();\r\n    }, 10);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <canvas ref={canvasRef} id=\"pinkboard\" />\r\n      <div\r\n        className=\"center-text\"\r\n        style={{\r\n          backgroundColor: \"rgb(0, 0, 0)\",\r\n          width: \"100%\",\r\n          color: \"rgb(225, 12, 168)\",\r\n          height: \"100%\",\r\n          fontSize: \"31px\",\r\n          fontStyle: \"italic\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: \"5px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        I Love You\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeartAnimation2;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}