{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\vnd\\\\New folder\\\\happycode\\\\src\\\\heart\\\\components\\\\heart3\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./styles.css\";\n\n// Extend Window interface to include requestAnimationFrame and cancelAnimationFrame\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeartAnimation3 = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current;\n    // Using non-null assertion operator since we've already checked canvasRef.current\n    const context = canvas.getContext(\"2d\");\n    if (!context) return;\n    const settings = {\n      particles: {\n        length: 2000,\n        // maximum amount of particles\n        duration: 2,\n        // particle duration in sec\n        velocity: 100,\n        // particle velocity in pixels/sec\n        effect: -1.3,\n        // play with this for a nice effect\n        size: 13 // particle size in pixels\n      }\n    };\n\n    // RequestAnimationFrame polyfill\n    (function () {\n      let lastTime = 0;\n      const vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\n      for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + \"RequestAnimationFrame\"];\n        window.cancelAnimationFrame = window[vendors[x] + \"CancelAnimationFrame\"] || window[vendors[x] + \"CancelRequestAnimationFrame\"];\n      }\n      if (!window.requestAnimationFrame) {\n        window.requestAnimationFrame = function (callback) {\n          const currTime = new Date().getTime();\n          const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n          const id = window.setTimeout(function () {\n            callback(currTime + timeToCall);\n          }, timeToCall);\n          lastTime = currTime + timeToCall;\n          return id;\n        };\n      }\n      if (!window.cancelAnimationFrame) {\n        window.cancelAnimationFrame = function (id) {\n          clearTimeout(id);\n        };\n      }\n    })();\n\n    // Point class\n    class PointClass {\n      constructor(x, y) {\n        this.x = void 0;\n        this.y = void 0;\n        this.x = typeof x !== \"undefined\" ? x : 0;\n        this.y = typeof y !== \"undefined\" ? y : 0;\n      }\n      clone() {\n        return new PointClass(this.x, this.y);\n      }\n      length(length) {\n        if (typeof length === \"undefined\") return Math.sqrt(this.x * this.x + this.y * this.y);\n        this.normalize();\n        this.x *= length;\n        this.y *= length;\n        return this;\n      }\n      normalize() {\n        const length = this.length();\n        this.x /= length;\n        this.y /= length;\n        return this;\n      }\n    }\n\n    // Particle class\n    class ParticleClass {\n      constructor() {\n        this.position = void 0;\n        this.velocity = void 0;\n        this.acceleration = void 0;\n        this.age = void 0;\n        this.position = new PointClass();\n        this.velocity = new PointClass();\n        this.acceleration = new PointClass();\n        this.age = 0;\n      }\n      initialize(x, y, dx, dy) {\n        this.position.x = x;\n        this.position.y = y;\n        this.velocity.x = dx;\n        this.velocity.y = dy;\n        this.acceleration.x = dx * settings.particles.effect;\n        this.acceleration.y = dy * settings.particles.effect;\n        this.age = 0;\n      }\n      update(deltaTime) {\n        this.position.x += this.velocity.x * deltaTime;\n        this.position.y += this.velocity.y * deltaTime;\n        this.velocity.x += this.acceleration.x * deltaTime;\n        this.velocity.y += this.acceleration.y * deltaTime;\n        this.age += deltaTime;\n      }\n      draw(context, image) {\n        function ease(t) {\n          return --t * t * t + 1;\n        }\n        const size = image.width * ease(this.age / settings.particles.duration);\n        context.globalAlpha = 1 - this.age / settings.particles.duration;\n        context.drawImage(image, this.position.x - size / 2, this.position.y - size / 2, size, size);\n      }\n    }\n\n    // ParticlePool class\n    class ParticlePoolClass {\n      constructor(length) {\n        this.particles = void 0;\n        this.firstActive = 0;\n        this.firstFree = 0;\n        this.duration = settings.particles.duration;\n        // create and populate particle pool\n        this.particles = new Array(length);\n        for (let i = 0; i < this.particles.length; i++) this.particles[i] = new ParticleClass();\n      }\n      add(x, y, dx, dy) {\n        this.particles[this.firstFree].initialize(x, y, dx, dy);\n        // handle circular queue\n        this.firstFree++;\n        if (this.firstFree === this.particles.length) this.firstFree = 0;\n        if (this.firstActive === this.firstFree) this.firstActive++;\n        if (this.firstActive === this.particles.length) this.firstActive = 0;\n      }\n      update(deltaTime) {\n        let i;\n        // update active particles\n        if (this.firstActive < this.firstFree) {\n          for (i = this.firstActive; i < this.firstFree; i++) this.particles[i].update(deltaTime);\n        }\n        if (this.firstFree < this.firstActive) {\n          for (i = this.firstActive; i < this.particles.length; i++) this.particles[i].update(deltaTime);\n          for (i = 0; i < this.firstFree; i++) this.particles[i].update(deltaTime);\n        }\n        // remove inactive particles\n        while (this.particles[this.firstActive].age >= this.duration && this.firstActive !== this.firstFree) {\n          this.firstActive++;\n          if (this.firstActive === this.particles.length) this.firstActive = 0;\n        }\n      }\n      draw(context, image) {\n        let i;\n        // draw active particles\n        if (this.firstActive < this.firstFree) {\n          for (i = this.firstActive; i < this.firstFree; i++) this.particles[i].draw(context, image);\n        }\n        if (this.firstFree < this.firstActive) {\n          for (i = this.firstActive; i < this.particles.length; i++) this.particles[i].draw(context, image);\n          for (i = 0; i < this.firstFree; i++) this.particles[i].draw(context, image);\n        }\n      }\n    }\n    const particles = new ParticlePoolClass(settings.particles.length);\n    const particleRate = settings.particles.length / settings.particles.duration; // particles/sec\n    let time;\n\n    // get point on heart with -PI <= t <= PI\n    function pointOnHeart(t) {\n      return new PointClass(160 * Math.pow(Math.sin(t), 3), 130 * Math.cos(t) - 50 * Math.cos(2 * t) - 20 * Math.cos(3 * t) - 10 * Math.cos(4 * t) + 25);\n    }\n\n    // creating the particle image using a dummy canvas\n    const image = function () {\n      const canvas = document.createElement(\"canvas\");\n      const context = canvas.getContext(\"2d\");\n      if (!context) throw new Error(\"Could not get canvas context\");\n      canvas.width = settings.particles.size;\n      canvas.height = settings.particles.size;\n\n      // helper function to create the path\n      function to(t) {\n        const point = pointOnHeart(t);\n        point.x = settings.particles.size / 2 + point.x * settings.particles.size / 350;\n        point.y = settings.particles.size / 2 - point.y * settings.particles.size / 350;\n        return point;\n      }\n\n      // create the path\n      context.beginPath();\n      let t = -Math.PI;\n      let point = to(t);\n      context.moveTo(point.x, point.y);\n      while (t < Math.PI) {\n        t += 0.01; // baby steps!\n        point = to(t);\n        context.lineTo(point.x, point.y);\n      }\n      context.closePath();\n\n      // create the fill\n      context.fillStyle = \"#FF5CA4\";\n      context.fill();\n\n      // create the image\n      const image = new Image();\n      image.src = canvas.toDataURL();\n      return image;\n    }();\n\n    // render that thing!\n    function render() {\n      // next animation frame\n      requestAnimationFrame(render);\n\n      // update time\n      const newTime = new Date().getTime() / 1000;\n      const deltaTime = newTime - (time || newTime);\n      time = newTime;\n\n      // clear canvas\n      context.clearRect(0, 0, canvas.width, canvas.height);\n\n      // create new particles\n      const amount = particleRate * deltaTime;\n      for (let i = 0; i < amount; i++) {\n        const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\n        const dir = pos.clone().length(settings.particles.velocity);\n        particles.add(canvas.width / 2 + pos.x, canvas.height / 2 - pos.y, dir.x, -dir.y);\n      }\n\n      // update and draw particles\n      particles.update(deltaTime);\n      particles.draw(context, image);\n    }\n\n    // handle (re-)sizing of the canvas\n    function onResize() {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n    window.addEventListener(\"resize\", onResize);\n\n    // delay rendering bootstrap\n    setTimeout(function () {\n      onResize();\n      render();\n    }, 10);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener(\"resize\", onResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"pinkboard\",\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text\",\n      children: \"I Love You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 354,\n    columnNumber: 5\n  }, this);\n};\n_s(HeartAnimation3, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = HeartAnimation3;\nexport default HeartAnimation3;\nvar _c;\n$RefreshReg$(_c, \"HeartAnimation3\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","HeartAnimation3","_s","canvasRef","current","canvas","context","getContext","settings","particles","length","duration","velocity","effect","size","lastTime","vendors","x","window","requestAnimationFrame","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","PointClass","constructor","y","clone","sqrt","normalize","ParticleClass","position","acceleration","age","initialize","dx","dy","update","deltaTime","draw","image","ease","t","width","globalAlpha","drawImage","ParticlePoolClass","firstActive","firstFree","Array","i","add","particleRate","time","pointOnHeart","pow","sin","cos","document","createElement","Error","height","to","point","beginPath","PI","moveTo","lineTo","closePath","fillStyle","fill","Image","src","toDataURL","render","newTime","clearRect","amount","pos","random","dir","onResize","clientWidth","clientHeight","addEventListener","removeEventListener","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/OneDrive/Máy tính/vnd/New folder/happycode/src/heart/components/heart3/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./styles.css\";\r\n\r\ninterface Point {\r\n  x: number;\r\n  y: number;\r\n  clone(): Point;\r\n  length(length?: number): number | Point;\r\n  normalize(): Point;\r\n}\r\n\r\ninterface Particle {\r\n  position: Point;\r\n  velocity: Point;\r\n  acceleration: Point;\r\n  age: number;\r\n  initialize(x: number, y: number, dx: number, dy: number): void;\r\n  update(deltaTime: number): void;\r\n  draw(context: CanvasRenderingContext2D, image: HTMLImageElement): void;\r\n}\r\n\r\ninterface ParticlePool {\r\n  add(x: number, y: number, dx: number, dy: number): void;\r\n  update(deltaTime: number): void;\r\n  draw(context: CanvasRenderingContext2D, image: HTMLImageElement): void;\r\n}\r\n\r\ninterface Settings {\r\n  particles: {\r\n    length: number;\r\n    duration: number;\r\n    velocity: number;\r\n    effect: number;\r\n    size: number;\r\n  };\r\n}\r\n\r\n// Extend Window interface to include requestAnimationFrame and cancelAnimationFrame\r\ndeclare global {\r\n  interface Window {\r\n    [key: string]: any;\r\n  }\r\n}\r\n\r\nconst HeartAnimation3: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    // Using non-null assertion operator since we've already checked canvasRef.current\r\n    const context = canvas.getContext(\"2d\")!;\r\n    if (!context) return;\r\n\r\n    const settings: Settings = {\r\n      particles: {\r\n        length: 2000, // maximum amount of particles\r\n        duration: 2, // particle duration in sec\r\n        velocity: 100, // particle velocity in pixels/sec\r\n        effect: -1.3, // play with this for a nice effect\r\n        size: 13, // particle size in pixels\r\n      },\r\n    };\r\n\r\n    // RequestAnimationFrame polyfill\r\n    (function () {\r\n      let lastTime = 0;\r\n      const vendors = [\"ms\", \"moz\", \"webkit\", \"o\"];\r\n      for (\r\n        let x = 0;\r\n        x < vendors.length && !window.requestAnimationFrame;\r\n        ++x\r\n      ) {\r\n        window.requestAnimationFrame =\r\n          window[vendors[x] + \"RequestAnimationFrame\"];\r\n        window.cancelAnimationFrame =\r\n          window[vendors[x] + \"CancelAnimationFrame\"] ||\r\n          window[vendors[x] + \"CancelRequestAnimationFrame\"];\r\n      }\r\n\r\n      if (!window.requestAnimationFrame) {\r\n        window.requestAnimationFrame = function (callback) {\r\n          const currTime = new Date().getTime();\r\n          const timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n          const id = window.setTimeout(function () {\r\n            callback(currTime + timeToCall);\r\n          }, timeToCall);\r\n          lastTime = currTime + timeToCall;\r\n          return id;\r\n        };\r\n      }\r\n\r\n      if (!window.cancelAnimationFrame) {\r\n        window.cancelAnimationFrame = function (id) {\r\n          clearTimeout(id);\r\n        };\r\n      }\r\n    })();\r\n\r\n    // Point class\r\n    class PointClass implements Point {\r\n      x: number;\r\n      y: number;\r\n\r\n      constructor(x?: number, y?: number) {\r\n        this.x = typeof x !== \"undefined\" ? x : 0;\r\n        this.y = typeof y !== \"undefined\" ? y : 0;\r\n      }\r\n\r\n      clone(): Point {\r\n        return new PointClass(this.x, this.y);\r\n      }\r\n\r\n      length(length?: number): number | Point {\r\n        if (typeof length === \"undefined\")\r\n          return Math.sqrt(this.x * this.x + this.y * this.y);\r\n        this.normalize();\r\n        this.x *= length;\r\n        this.y *= length;\r\n        return this;\r\n      }\r\n\r\n      normalize(): Point {\r\n        const length = this.length() as number;\r\n        this.x /= length;\r\n        this.y /= length;\r\n        return this;\r\n      }\r\n    }\r\n\r\n    // Particle class\r\n    class ParticleClass implements Particle {\r\n      position: Point;\r\n      velocity: Point;\r\n      acceleration: Point;\r\n      age: number;\r\n\r\n      constructor() {\r\n        this.position = new PointClass();\r\n        this.velocity = new PointClass();\r\n        this.acceleration = new PointClass();\r\n        this.age = 0;\r\n      }\r\n\r\n      initialize(x: number, y: number, dx: number, dy: number): void {\r\n        this.position.x = x;\r\n        this.position.y = y;\r\n        this.velocity.x = dx;\r\n        this.velocity.y = dy;\r\n        this.acceleration.x = dx * settings.particles.effect;\r\n        this.acceleration.y = dy * settings.particles.effect;\r\n        this.age = 0;\r\n      }\r\n\r\n      update(deltaTime: number): void {\r\n        this.position.x += this.velocity.x * deltaTime;\r\n        this.position.y += this.velocity.y * deltaTime;\r\n        this.velocity.x += this.acceleration.x * deltaTime;\r\n        this.velocity.y += this.acceleration.y * deltaTime;\r\n        this.age += deltaTime;\r\n      }\r\n\r\n      draw(context: CanvasRenderingContext2D, image: HTMLImageElement): void {\r\n        function ease(t: number): number {\r\n          return --t * t * t + 1;\r\n        }\r\n        const size = image.width * ease(this.age / settings.particles.duration);\r\n        context.globalAlpha = 1 - this.age / settings.particles.duration;\r\n        context.drawImage(\r\n          image,\r\n          this.position.x - size / 2,\r\n          this.position.y - size / 2,\r\n          size,\r\n          size\r\n        );\r\n      }\r\n    }\r\n\r\n    // ParticlePool class\r\n    class ParticlePoolClass implements ParticlePool {\r\n      particles: Particle[];\r\n      firstActive: number = 0;\r\n      firstFree: number = 0;\r\n      duration: number = settings.particles.duration;\r\n\r\n      constructor(length: number) {\r\n        // create and populate particle pool\r\n        this.particles = new Array(length);\r\n        for (let i = 0; i < this.particles.length; i++)\r\n          this.particles[i] = new ParticleClass();\r\n      }\r\n\r\n      add(x: number, y: number, dx: number, dy: number): void {\r\n        this.particles[this.firstFree].initialize(x, y, dx, dy);\r\n        // handle circular queue\r\n        this.firstFree++;\r\n        if (this.firstFree === this.particles.length) this.firstFree = 0;\r\n        if (this.firstActive === this.firstFree) this.firstActive++;\r\n        if (this.firstActive === this.particles.length) this.firstActive = 0;\r\n      }\r\n\r\n      update(deltaTime: number): void {\r\n        let i: number;\r\n        // update active particles\r\n        if (this.firstActive < this.firstFree) {\r\n          for (i = this.firstActive; i < this.firstFree; i++)\r\n            this.particles[i].update(deltaTime);\r\n        }\r\n        if (this.firstFree < this.firstActive) {\r\n          for (i = this.firstActive; i < this.particles.length; i++)\r\n            this.particles[i].update(deltaTime);\r\n          for (i = 0; i < this.firstFree; i++)\r\n            this.particles[i].update(deltaTime);\r\n        }\r\n        // remove inactive particles\r\n        while (\r\n          this.particles[this.firstActive].age >= this.duration &&\r\n          this.firstActive !== this.firstFree\r\n        ) {\r\n          this.firstActive++;\r\n          if (this.firstActive === this.particles.length) this.firstActive = 0;\r\n        }\r\n      }\r\n\r\n      draw(context: CanvasRenderingContext2D, image: HTMLImageElement): void {\r\n        let i: number;\r\n        // draw active particles\r\n        if (this.firstActive < this.firstFree) {\r\n          for (i = this.firstActive; i < this.firstFree; i++)\r\n            this.particles[i].draw(context, image);\r\n        }\r\n        if (this.firstFree < this.firstActive) {\r\n          for (i = this.firstActive; i < this.particles.length; i++)\r\n            this.particles[i].draw(context, image);\r\n          for (i = 0; i < this.firstFree; i++)\r\n            this.particles[i].draw(context, image);\r\n        }\r\n      }\r\n    }\r\n\r\n    const particles = new ParticlePoolClass(settings.particles.length);\r\n    const particleRate =\r\n      settings.particles.length / settings.particles.duration; // particles/sec\r\n    let time: number;\r\n\r\n    // get point on heart with -PI <= t <= PI\r\n    function pointOnHeart(t: number): Point {\r\n      return new PointClass(\r\n        160 * Math.pow(Math.sin(t), 3),\r\n        130 * Math.cos(t) -\r\n          50 * Math.cos(2 * t) -\r\n          20 * Math.cos(3 * t) -\r\n          10 * Math.cos(4 * t) +\r\n          25\r\n      );\r\n    }\r\n\r\n    // creating the particle image using a dummy canvas\r\n    const image = (function (): HTMLImageElement {\r\n      const canvas = document.createElement(\"canvas\");\r\n      const context = canvas.getContext(\"2d\");\r\n      if (!context) throw new Error(\"Could not get canvas context\");\r\n\r\n      canvas.width = settings.particles.size;\r\n      canvas.height = settings.particles.size;\r\n\r\n      // helper function to create the path\r\n      function to(t: number): Point {\r\n        const point = pointOnHeart(t);\r\n        point.x =\r\n          settings.particles.size / 2 +\r\n          (point.x * settings.particles.size) / 350;\r\n        point.y =\r\n          settings.particles.size / 2 -\r\n          (point.y * settings.particles.size) / 350;\r\n        return point;\r\n      }\r\n\r\n      // create the path\r\n      context.beginPath();\r\n      let t = -Math.PI;\r\n      let point = to(t);\r\n      context.moveTo(point.x, point.y);\r\n      while (t < Math.PI) {\r\n        t += 0.01; // baby steps!\r\n        point = to(t);\r\n        context.lineTo(point.x, point.y);\r\n      }\r\n      context.closePath();\r\n\r\n      // create the fill\r\n      context.fillStyle = \"#FF5CA4\";\r\n      context.fill();\r\n\r\n      // create the image\r\n      const image = new Image();\r\n      image.src = canvas.toDataURL();\r\n      return image;\r\n    })();\r\n\r\n    // render that thing!\r\n    function render(): void {\r\n      // next animation frame\r\n      requestAnimationFrame(render);\r\n\r\n      // update time\r\n      const newTime = new Date().getTime() / 1000;\r\n      const deltaTime = newTime - (time || newTime);\r\n      time = newTime;\r\n\r\n      // clear canvas\r\n      context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // create new particles\r\n      const amount = particleRate * deltaTime;\r\n      for (let i = 0; i < amount; i++) {\r\n        const pos = pointOnHeart(Math.PI - 2 * Math.PI * Math.random());\r\n        const dir = pos.clone().length(settings.particles.velocity) as Point;\r\n        particles.add(\r\n          canvas.width / 2 + pos.x,\r\n          canvas.height / 2 - pos.y,\r\n          dir.x,\r\n          -dir.y\r\n        );\r\n      }\r\n\r\n      // update and draw particles\r\n      particles.update(deltaTime);\r\n      particles.draw(context, image);\r\n    }\r\n\r\n    // handle (re-)sizing of the canvas\r\n    function onResize(): void {\r\n      canvas.width = canvas.clientWidth;\r\n      canvas.height = canvas.clientHeight;\r\n    }\r\n\r\n    window.addEventListener(\"resize\", onResize);\r\n\r\n    // delay rendering bootstrap\r\n    setTimeout(function () {\r\n      onResize();\r\n      render();\r\n    }, 10);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <canvas id=\"pinkboard\" ref={canvasRef}></canvas>\r\n      <div className=\"center-text\">I Love You</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeartAnimation3;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}